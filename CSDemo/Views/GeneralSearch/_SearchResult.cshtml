@inherits  Glass.Mapper.Sc.Web.Mvc.GlassView<CSDemo.Contracts.Product.IProduct>
    @using System.Linq
<div class="col-md-4 col-sm-3 col-xs-6">
    <article class="product-item">
        <div class="row">
            <div class="col-sm-3">
                <div class="product-overlay">
                    <div class="product-mask"></div>
                    <a href="@Model.Url" class="product-permalink"></a>
                    @{
                        var count = 0;
                    }
                    @if (Model.Images != null && Model.Images.Any()) { 
                    
                        foreach (var image in Model.Images)
                        {
                            count++;
                            @RenderImage(image, x => x, new { Width = 360, Height = 351, AS=1, BC="ffffff", @class= "img-responsive product-image-"+count }, isEditable: false);
                                                                                                                                                                               if (count == 2) { break; }
                        }
                    }
                    else
                    {
                        if (!string.IsNullOrEmpty(Model.Image1) || !string.IsNullOrEmpty(Model.Image2))
                        {

                            var altImages = Model.AltImages();
                            foreach (var src in altImages)
                            {
                                count++;
                                <img src="@src" style="width:360px;height:351px;background-color:#ffffff" class="img-responsive product-image-@count" />
                                if (count == 2) { break; }
                            }
                        }
                    }
                </div>
            </div>
            <div class="col-sm-9">
                <div class="product-body">
                    <h3>@Model.Title</h3>
                    <div class="product-labels">
                        @if (Model.IsNew)
                        {
                            <span class="label label-info">new</span>
                        }
                        @if (Model.IsOnSale)
                        {
                            <span class="label label-danger">sale</span>
                        }
                    </div>
                    <span class="price">
                        <ins><span class="amount">$@Model.CurrencyPrice</span></ins>
                    </span>
                    <div class="product-rating">
                        <i class="fa fa-star@(Model.Rating>0 ? string.Empty:"-o" )"></i>
                        <i class="fa fa-star@(Model.Rating>1 ? string.Empty:"-o" )"></i>
                        <i class="fa fa-star@(Model.Rating>2 ? string.Empty:"-o" )"></i>
                        <i class="fa fa-star@(Model.Rating>3 ? string.Empty:"-o" )"></i>
                        <i class="fa fa-star@(Model.Rating>4 ? string.Empty:"-o" )"></i>
                    </div>
                </div>
            </div>
        </div>
    </article>
</div>