@using Sitecore.Links;
@using Sitecore.Mvc;
@using Sitecore.Resources.Media;
@using System.Linq;
@inherits Glass.Mapper.Sc.Web.Mvc.GlassView<IEnumerable<CSDemo.Models.Product.Product>>
@if (Model != null && Model.Any())
{
    <div class="releated-products">
        <h2>Related Products</h2>
        <div class="row grid" id="products">
            @foreach (var product in Model)
            {
                using (BeginEditFrame(product.Path))
                {
                    <div class="col-sm-3 col-xs-6">
                        <article class="product-item">
                            <div class="row">
                                <div class="col-sm-3">
                                    <div class="product-overlay">
                                        <div class="product-mask"></div>
                                        <a href="@product.Url" class="product-permalink"></a>
                                        @RenderImage(product.Images.ElementAt(0), x => x, new { AS = 1, @class = "img-responsive" }, isEditable: false)

                                        @*@*Per Vasiliy, leave out for now*@
                                        @*<div class="product-quickview">
                                                <a href="@product.Url" class="btn btn-quickview" data-toggle="modal" data-target="#product-quickview">View Product</a>
                                            </div>*@
                                    </div>
                                </div>
                                <div class="col-sm-9">
                                    <div class="product-body">
                                        <h3>
                                            <a href="@product.Url">@product.Title</a>
                                        </h3>
                                        @*Per Vasiliy, add for now*@
                                        <div class="product-rating">
                                            @if (IsInEditingMode)
                                            {
                                                @Editable(product, x => x.Rating)
                                            }
                                            else
                                            {
                                                <i class="fa fa-star@(product.Rating>0 ? string.Empty:"-o" )"></i>
                                                <i class="fa fa-star@(product.Rating>1 ? string.Empty:"-o" )"></i>
                                                <i class="fa fa-star@(product.Rating>2 ? string.Empty:"-o" )"></i>
                                                <i class="fa fa-star@(product.Rating>3 ? string.Empty:"-o" )"></i>
                                                <i class="fa fa-star@(product.Rating>4 ? string.Empty:"-o" )"></i>
                                            }
                                        </div>
                                        <span class="price">
                                            @*Per Vasiliy, leave out for now*@
                                            @*<ins><span class="amount">@featuredProduct.Price.ToString("C")</span></ins>*@

                                            @if (IsInEditingMode)
                                            {
                                                <ins><span class="amount">@Editable(product, x => x.Price)</span></ins>
                                            }
                                            else
                                            {
                                                <ins><span class="amount">@product.Price.ToString("C")</span></ins>
                                            }
                                        </span>
                                        <br /><br />
                                    </div>
                                </div>
                            </div>
                        </article>
                    </div>
                }
            }
        </div>
    </div>
}